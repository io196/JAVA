
//求当前二叉树的镜像二叉树

public class Main_192 {
    public class TreeNode {
        int val = 0;
        TreeNode left = null;
        TreeNode right = null;
        public TreeNode(int val) {
            this.val = val;
        }
    }
    public void Mirror(TreeNode root) {
        if(root == null)
            return;
        if(root.left == null && root.right == null)
            return;
        TreeNode temp = root.left;
        root.left = root.right;
        root.right = temp;
        if(root.left != null)
            Mirror(root.left);
        if(root.right != null)
            Mirror(root.right);
    }
}
//    public void Mirror(TreeNode root) {
//        swap(root);
//    }
//
//    private void swap(TreeNode root) {
//        if (root.left == null && root.right == null) {
//            return;
//        }
//        if (root.left == null) {
//            root.left = root.right;
//            root.right = null;
//        }
//        if (root.right == null) {
//            root.right = root.left;
//            root.left = null;
//        }
//        if (root.left.left == null && root.left.right == null && root.right.left == null && root.right.right == null) {
//            TreeNode tmp = root.left;
//            root.left = root.right;
//            root.right = tmp;
//            return;
//        }
//        swap(root.left);
//        swap(root.right);
//    }

    /**
     public class TreeNode {
     int val = 0;
     TreeNode left = null;
     TreeNode right = null;

     public TreeNode(int val) {
     this.val = val;
     }
     }
     */



